# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  android: circleci/android@3.0.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  unit-test:
    executor:
      name: android/android_docker
      tag: 2024.01.1
    steps:
      - checkout
      - android/restore_gradle_cache
      - android/run_tests:
          test_command: ./gradlew testDebug
      - run:
          name: Save test results
          command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save_gradle_cache
  android-test:
    executor:
      name: android/android_machine
      resource_class: large
      tag: 2024.01.1
    steps:
      - checkout
      - android/start_emulator_and_run_tests:
          test_command: ./gradlew connectedDebugAndroidTest
          system_image: system-images;android-30;google_apis;x86
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-and-build:
    jobs:
      - unit-test
      - android-test